[build]
  command = "cd expense-tracker-svelte && npm install && npm run build"
  publish = "expense-tracker-svelte/build"
  functions = "netlify/functions"
  
  # Define environment variables for the build
  [build.environment]
    NODE_VERSION = "18"
    NPM_FLAGS = "--no-audit --no-fund"
    # Enable more verbose build output for debugging
    DEBUG = "netlify:build"

# Define different contexts for branch-specific settings
# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
[context.production]
  command = "cd expense-tracker-svelte && npm install && npm run build"
  [context.production.environment]
    NODE_ENV = "production"

# Deploy Preview context: all deploys generated from a pull/merge request
# will inherit these settings.
[context.deploy-preview]
  command = "cd expense-tracker-svelte && npm install && npm run build"
  [context.deploy-preview.environment]
    NODE_ENV = "production"

# Branch Deploy context: all deploys that are not from a pull/merge request
# or from the Production branch will inherit these settings.
[context.branch-deploy]
  command = "cd expense-tracker-svelte && npm install && npm run build"
  [context.branch-deploy.environment]
    NODE_ENV = "production"

[functions]
  node_bundler = "esbuild"
  # External modules that should not be bundled
  external_node_modules = [
    "@supabase/supabase-js",
    "@anthropic-ai/sdk",
    "postgres",
    "drizzle-orm",
    "pdf-parse",
    "sharp"
  ]
  # Set function timeout to 30 seconds (max for Netlify free tier)
  timeout = "30s"
  # Include source maps for easier debugging
  included_files = ["dist-server/**/*.map"]

# Headers to set on different paths
[[headers]]
  # Define security headers for all pages
  for = "/*"
    [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.clerk.io; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://cdn.clerk.io https://*.supabase.co; connect-src 'self' https://*.clerk.dev https://*.supabase.co https://api.openai.com https://api.anthropic.com https://api.gemini.google.com; frame-src 'self' https://accounts.google.com https://*.clerk.accounts.dev;"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"

# Cache control for static assets
[[headers]]
  for = "/assets/*"
    [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# SvelteKit handles its own routing, but we need to keep the function redirects
[[redirects]]
  # Redirect legacy API requests to the serverless function
  from = "/api/v1/*"
  to = "/.netlify/functions/api/:splat"
  status = 200
  force = true

[[redirects]]
  # Redirect Clerk webhook requests
  from = "/webhook/clerk"
  to = "/.netlify/functions/clerk-webhook"
  status = 200
  force = true

[[redirects]]
  # Redirect OCR processing requests
  from = "/process-ocr"
  to = "/.netlify/functions/process-ocr"
  status = 200
  force = true

[[redirects]]
  # Redirect batch upload requests
  from = "/batch-upload"
  to = "/.netlify/functions/batch-upload"
  status = 200
  force = true

[[redirects]]
  # Redirect export requests
  from = "/export"
  to = "/.netlify/functions/export-expenses"
  status = 200
  force = true

# SvelteKit handles all other routes
# No need for a fallback redirect as SvelteKit's adapter-netlify handles this

[dev]
  # Directory to serve for local development
  publish = "client/dist"
  command = "npm run dev"

# Add build plugins for better error handling and performance
[[plugins]]
  package = "@netlify/plugin-lighthouse"

# Remove NextJS plugin as it's not needed for this project